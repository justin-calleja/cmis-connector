<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
                           
	<util:map id="createFolder" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
	</util:map> 

	<util:map id="delete" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="objectId" value="tmpObjectId" />
		<entry key="allVersions" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
	</util:map> 
	
	<util:map id="repositoryInfo" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
<!-- 		empty -->
	</util:map> 
	
	<util:map id="getObjectById" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="objectId" value="tmpObjectId" />
	</util:map> 
	
	<util:map id="createRelationship" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename1" value="fileForTesting1" />
		<entry key="filename2" value="fileForTesting2" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="childObjectId" value="tmpChildObjectId" />
		<entry key="relationshipType" value="cmiscustom:assoc" />
		<entry key="folderPath" value="/" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />
	</util:map> 
	
	<util:map id="getObjectRelationships" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename1" value="fileForTesting1" />
		<entry key="filename2" value="fileForTesting2" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="childObjectId" value="tmpChildObjectId" />
		<entry key="relationshipType" value="cmiscustom:assoc" />
		<entry key="folderPath" value="/" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
	</util:map> 
	
	<util:map id="getAcl" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
	</util:map> 
	
	<util:map id="getParentFolders" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
	</util:map> 
	
	<util:map id="applyAspect" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="applyPolicyTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="aspectName" value="cm:taggable" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="aspectProperties">
			<map key-type="java.lang.String" value-type="java.lang.String">
			</map>
		</entry>
	</util:map>
 
	<util:map id="applyPolicy" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="applyPolicyTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="policyIdsRef">
			<list value-type="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
				<bean class="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
					<constructor-arg value="cm:translatable" />
				</bean>
				<bean class="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
					<constructor-arg value="secondPolicy" />
				</bean>
			</list>
		</entry>
	</util:map>
	
	<util:map id="getAppliedPolicies" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="getAppliedPoliciesTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="policyIdsRef">
			<list value-type="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
				<bean class="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
					<constructor-arg value="firstPolicy" />
				</bean>
				<bean class="org.apache.chemistry.opencmis.client.runtime.ObjectIdImpl">
					<constructor-arg value="secondPolicy" />
				</bean>
			</list>
		</entry>
	</util:map>
	
	<util:map id="getAllVersions" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="getAllVersionsFile" />
		<entry key="folderPath" value="/" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).MAJOR}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="Unmodified content" />
		<entry key="force" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="versions">
			<list value-type="java.util.HashMap">
				<map key-type="java.lang.String" value-type="java.lang.Object">
					<entry key="content" value="First Modification"/>				
					<entry key="checkinComment" value="Checking in first modification" />
					<entry key="major" value="#{T(java.lang.Boolean).TRUE}" />
				</map>
				<map key-type="java.lang.String" value-type="java.lang.Object">
					<entry key="content" value="Second Modification"/>				
					<entry key="checkinComment" value="Checking in second modification" />
					<entry key="major" value="#{T(java.lang.Boolean).FALSE}" />	
				</map>
			</list>
		</entry>
	</util:map>
	
	<util:map id="moveObject" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="targetFolderName" value="targetFolderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="targetFolderId" value="tmpTargetFolderId" />
		<entry key="objectId" value="tmpObjectId" />
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderPath" value="/" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />	
	</util:map> 
	
	<util:map id="createDocumentById" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderId" value="tmpFolderId" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="contentRef" value="this is the file content" />
	</util:map> 
	
	<util:map id="createDocumentByIdFromContent" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderId" value="tmpFolderId" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="contentRef" value="this is the file content" />
	</util:map> 
	
	<util:map id="createDocumentByPath" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderPath" value="/" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="contentRef" value="this is the file content" />
		<entry key="force" value="#{T(java.lang.Boolean).TRUE}" />
	</util:map> 
	
	<util:map id="createDocumentByPathFromContent" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderPath" value="/" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="contentRef" value="this is the file content" />
		<entry key="force" value="#{T(java.lang.Boolean).TRUE}" />
	</util:map> 
	
	<util:map id="deleteTree" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="objectId" value="tmpObjectId" />
		<entry key="allversions" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="continueOnFailure" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderId" value="tmpFolderId" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="contentRef" value="this is the file content" />
	</util:map> 
	
	<util:map id="getTypeDefinition" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="typeId" value="cmis:relationship" />
	</util:map> 
	
	<util:map id="getContentStream" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderId" value="tmpFolderId" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />
		<entry key="objectId" value="tmpObjectId" />
	</util:map> 
	
	<util:map id="getObjectByPath" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="folderForTesting" />
		<entry key="parentObjectId" value="tmpParentObjectId" />
		<entry key="filename" value="filenameForTesting" />
		<entry key="folderId" value="tmpFolderId" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />
		<entry key="path" value="tmpPath" />
	</util:map> 
	
	<util:map id="applyAcl" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="filenameForTesting" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="content" value="this is the file content" />
		<entry key="aclPropagation" value="#{T(org.apache.chemistry.opencmis.commons.enums.AclPropagation).OBJECTONLY}" />
	</util:map> 
	
	<util:map id="checkIn" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="checkinTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="major" value="true" />
		<entry key="checkinComment" value="Checking in a new file" />
		<entry key="contentRef" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
	</util:map>
	
	<util:map id="checkOut" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="checkoutTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
	</util:map>
	
	<util:map id="cancelCheckOut" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="cancel_checkout_test_file" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="major" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="checkinComment" value="Checking in a file for testing" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
	</util:map>
	
	<util:map id="getCheckoutDocs" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="docs">
			<list value-type="java.util.HashMap">
				<map key-type="java.lang.String" value-type="java.lang.Object">
					<entry key="filename" value="Doc_1" />
					<entry key="mimeType" value="text/plain;charset=UTF-8" />
					<entry key="content" value="The first document" />
					<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
					<entry key="objectType" value="D:cmiscustom:document" />
					<entry key="propertiesRef">
						<map key-type="java.lang.String" value-type="java.lang.Object">
						</map>
					</entry>
				</map>
				<map key-type="java.lang.String" value-type="java.lang.Object">
					<entry key="filename" value="Doc_2" />
					<entry key="mimeType" value="text/plain;charset=UTF-8" />
					<entry key="content" value="The second document" />
					<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
					<entry key="objectType" value="D:cmiscustom:document" />
					<entry key="propertiesRef">
						<map key-type="java.lang.String" value-type="java.lang.Object">
						</map>
					</entry>
				</map>
			</list>
		</entry>
	</util:map>
			
	<util:map id="updateObjectProperties" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filename" value="checkinTestFile" />
		<entry key="mimeType" value="text/plain;charset=UTF-8" />
		<entry key="content" value="This is the file content" />
		<entry key="versioningState" value="#{T(org.mule.module.cmis.VersioningState).NONE}" />
		<entry key="objectType" value="D:cmiscustom:document" />
		<entry key="propertiesRef">
			<map key-type="java.lang.String" value-type="java.lang.Object">
			</map>
		</entry>
		<entry key="propertiesRefUpdated">
			<map key-type="java.lang.String" value-type="java.lang.Object">
				<entry key="cmis:name" value="myFileRenamed" />
			</map>
		</entry>
	</util:map>
	
	<!-- test case counts the number of child folders of root folder -->
	<util:map id="folder" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="get" value="#{T(org.mule.module.cmis.NavigationOptions).CHILDREN}" />
		<entry key="parentFolder" value="parentFolder" />
		<entry key="subfolders">
			<list value-type="java.lang.String">
				<value>folderOne</value>
				<value>folderTwo</value>
			</list>
		</entry>
	</util:map>
	
	<util:map id="repositories" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<!-- empty -->
	</util:map>
	
	<util:map id="getOrCreateFolderByPath" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderPath" value="/tmpFolderForTesting" />
	</util:map> 
	
	<util:map id="changelog" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="changeLogFolder" />
		<entry key="includeProperties" value="#{T(java.lang.Boolean).TRUE}" />
	</util:map> 
	
	<util:map id="query" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="folderName" value="myFolder" />
		<entry key="searchAllVersions" value="#{T(java.lang.Boolean).TRUE}" />
		<entry key="statement" value="SELECT * FROM cmis:folder WHERE cmis:name = 'myFolder'" />
		<entry key="filter" value="cmis:name = 'myFolder'" />
	</util:map> 
</beans>
